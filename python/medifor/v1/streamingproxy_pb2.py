# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: medifor/v1/streamingproxy.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from medifor.v1 import analytic_pb2 as medifor_dot_v1_dot_analytic__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='medifor/v1/streamingproxy.proto',
  package='mediforproto',
  syntax='proto3',
  serialized_pb=_b('\n\x1fmedifor/v1/streamingproxy.proto\x12\x0cmediforproto\x1a\x19medifor/v1/analytic.proto\"`\n\tFileChunk\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x11\n\tmime_type\x18\x02 \x01(\t\x12\x0e\n\x06offset\x18\x03 \x01(\x03\x12\x13\n\x0btotal_bytes\x18\x04 \x01(\x03\x12\r\n\x05value\x18\x05 \x01(\x0c\"v\n\x0e\x44\x65tectionChunk\x12,\n\tdetection\x18\x01 \x01(\x0b\x32\x17.mediforproto.DetectionH\x00\x12-\n\nfile_chunk\x18\x02 \x01(\x0b\x32\x17.mediforproto.FileChunkH\x00\x42\x07\n\x05value2`\n\x0eStreamingProxy\x12N\n\x0c\x44\x65tectStream\x12\x1c.mediforproto.DetectionChunk\x1a\x1c.mediforproto.DetectionChunk(\x01\x30\x01\x62\x06proto3')
  ,
  dependencies=[medifor_dot_v1_dot_analytic__pb2.DESCRIPTOR,])




_FILECHUNK = _descriptor.Descriptor(
  name='FileChunk',
  full_name='mediforproto.FileChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='mediforproto.FileChunk.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mime_type', full_name='mediforproto.FileChunk.mime_type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='offset', full_name='mediforproto.FileChunk.offset', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='total_bytes', full_name='mediforproto.FileChunk.total_bytes', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='mediforproto.FileChunk.value', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=76,
  serialized_end=172,
)


_DETECTIONCHUNK = _descriptor.Descriptor(
  name='DetectionChunk',
  full_name='mediforproto.DetectionChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='detection', full_name='mediforproto.DetectionChunk.detection', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='file_chunk', full_name='mediforproto.DetectionChunk.file_chunk', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='value', full_name='mediforproto.DetectionChunk.value',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=174,
  serialized_end=292,
)

_DETECTIONCHUNK.fields_by_name['detection'].message_type = medifor_dot_v1_dot_analytic__pb2._DETECTION
_DETECTIONCHUNK.fields_by_name['file_chunk'].message_type = _FILECHUNK
_DETECTIONCHUNK.oneofs_by_name['value'].fields.append(
  _DETECTIONCHUNK.fields_by_name['detection'])
_DETECTIONCHUNK.fields_by_name['detection'].containing_oneof = _DETECTIONCHUNK.oneofs_by_name['value']
_DETECTIONCHUNK.oneofs_by_name['value'].fields.append(
  _DETECTIONCHUNK.fields_by_name['file_chunk'])
_DETECTIONCHUNK.fields_by_name['file_chunk'].containing_oneof = _DETECTIONCHUNK.oneofs_by_name['value']
DESCRIPTOR.message_types_by_name['FileChunk'] = _FILECHUNK
DESCRIPTOR.message_types_by_name['DetectionChunk'] = _DETECTIONCHUNK
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

FileChunk = _reflection.GeneratedProtocolMessageType('FileChunk', (_message.Message,), dict(
  DESCRIPTOR = _FILECHUNK,
  __module__ = 'medifor.v1.streamingproxy_pb2'
  # @@protoc_insertion_point(class_scope:mediforproto.FileChunk)
  ))
_sym_db.RegisterMessage(FileChunk)

DetectionChunk = _reflection.GeneratedProtocolMessageType('DetectionChunk', (_message.Message,), dict(
  DESCRIPTOR = _DETECTIONCHUNK,
  __module__ = 'medifor.v1.streamingproxy_pb2'
  # @@protoc_insertion_point(class_scope:mediforproto.DetectionChunk)
  ))
_sym_db.RegisterMessage(DetectionChunk)



_STREAMINGPROXY = _descriptor.ServiceDescriptor(
  name='StreamingProxy',
  full_name='mediforproto.StreamingProxy',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=294,
  serialized_end=390,
  methods=[
  _descriptor.MethodDescriptor(
    name='DetectStream',
    full_name='mediforproto.StreamingProxy.DetectStream',
    index=0,
    containing_service=None,
    input_type=_DETECTIONCHUNK,
    output_type=_DETECTIONCHUNK,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_STREAMINGPROXY)

DESCRIPTOR.services_by_name['StreamingProxy'] = _STREAMINGPROXY

# @@protoc_insertion_point(module_scope)
